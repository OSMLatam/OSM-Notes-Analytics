name: Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run weekly on Monday at 2am UTC
    - cron: '0 2 * * 1'
  workflow_dispatch:

jobs:
  shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install shellcheck
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck

    - name: Run shellcheck on Analytics scripts
      run: |
        echo "Running shellcheck on Analytics-specific scripts..."
        find bin/dwh -name "*.sh" -type f -exec shellcheck -x -o all {} \;

    - name: Run shellcheck on Common submodule (integration check)
      continue-on-error: true
      run: |
        echo "Running shellcheck on Common submodule in Analytics context..."
        find lib/osm-common -name "*.sh" -type f -exec shellcheck -x -o all {} \; || {
          echo "⚠️  Warning: Common submodule has shellcheck issues in Analytics context"
          echo "Note: This may indicate integration problems, not necessarily bugs in Common"
          exit 0
        }

  shfmt:
    name: Code Formatting
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install shfmt
      run: |
        wget -q -O shfmt https://github.com/mvdan/sh/releases/download/v3.7.0/shfmt_v3.7.0_linux_amd64
        chmod +x shfmt
        sudo mv shfmt /usr/local/bin/
        shfmt -version

    - name: Check Analytics code formatting
      run: |
        echo "Checking Analytics code formatting (shfmt -i 1 -sr -bn)..."
        find bin/dwh -name "*.sh" -type f -exec shfmt -d -i 1 -sr -bn {} \;

    - name: Check Common code formatting (integration check)
      continue-on-error: true
      run: |
        echo "Checking Common code formatting in Analytics context..."
        find lib/osm-common -name "*.sh" -type f -exec shfmt -d -i 1 -sr -bn {} \; || {
          echo "⚠️  Warning: Common submodule formatting issues in Analytics context"
          exit 0
        }

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Check for common issues
      run: |
        echo "Checking for common code quality issues..."

        # Check for trailing whitespace
        echo "Checking trailing whitespace..."
        if find bin/dwh -name "*.sh" -type f -exec grep -l " $" {} \; 2>/dev/null; then
          echo "⚠️  Found trailing whitespace in Analytics scripts"
          exit 1
        else
          echo "✓ No trailing whitespace found"
        fi

        # Check for proper shebang
        echo "Checking shebangs..."
        set +e
        INVALID_SHEBANGS=$(find bin/dwh -name "*.sh" -type f -exec head -1 {} \; | grep -v '#!/bin/bash' | wc -l)
        set -e
        INVALID_SHEBANGS=$(echo "$INVALID_SHEBANGS" | tr -d ' \n')
        if [[ "${INVALID_SHEBANGS}" -gt 0 ]]; then
          echo "⚠️  Found ${INVALID_SHEBANGS} script(s) without proper shebang"
          exit 1
        else
          echo "✓ All shebangs correct"
        fi

        # Check for TODO/FIXME comments
        echo "Checking for TODO/FIXME comments..."
        TODO_COUNT=$(find bin/dwh -name "*.sh" -type f -exec grep -c "TODO\|FIXME" {} \; 2>/dev/null | awk '{s+=$1} END {print s+0}' || echo "0")
        echo "Found ${TODO_COUNT} TODO/FIXME comments"

    - name: Generate quality report
      if: always()
      run: |
        echo "## Quality Check Results - Analytics" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Tests Performed:" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Shellcheck (Analytics scripts in bin/dwh/)" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Shellcheck (Common submodule - integration check)" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Shfmt (code formatting)" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Code quality checks" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Scope:" >> $GITHUB_STEP_SUMMARY
        echo "- **Analytics Scripts:** bin/dwh/" >> $GITHUB_STEP_SUMMARY
        echo "- **Common Submodule:** lib/osm-common/ (tested in context)" >> $GITHUB_STEP_SUMMARY


